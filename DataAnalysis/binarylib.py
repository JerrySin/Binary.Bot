# Steps:
# 1. Define trade contract
# 2. Watch and purchase contract
# 3. Watch and sell purchased contract
# 4. Get trade result and trade again
#
# A. Type: 
#    1. back testing (from old to new)
#    2. real trading (from new to old)
# B. Duration/Period
#    1. fixed (ticks/seconds)
#    2. unfixed (retrieve data based on the result of formula)
# C. Compare
#    1. Betting Type
#    2. Calculate the bet result based on the Betting Type accordingly
# D. Read FSO
#    1. 
#    2. 
# E. Verify History Data
#    1. No missing data detection

def loadData():

def verifyData():

def openDataFile(filename):
    fullFileName = "./DB/" + filename + ".txt"
    with open(fullFileName, "r") as file:
        # print(file.readlines()[0])

        for eachLine in file:
            print(eachLine)

def loadHistory(direction = "forward"):
    openDataFile("history_R_10_2017")




if __name__ == "__main__":
    loadHistory()


# 1483218802,9695.543
# 1483218804,9695.437
# 1483218806,9695.491
# 1483218808,9695.652
# 1483218810,9695.499
# 1483218812,9695.482
# 1483218814,9695.400
# 1483218816,9695.965
# 1483218818,9695.523
# 1483218820,9695.535
# 1483218822,9695.309
# 1483218824,9695.267
# 1483218826,9694.941
# 1483218828,9694.382
# 1483218830,9693.628
# 1483218832,9693.636
# 1483218834,9693.580
# 1483218836,9693.581
# 1483218838,9693.585
# 1483218840,9693.314
# 1483218842,9693.122
# 1483218844,9692.690
# 1483218846,9692.624
# 1483218848,9692.500
# 1483218850,9692.551
# 1483218852,9692.695
# 1483218854,9692.588
# 1483218856,9692.591
# 1483218858,9692.649
# 1483218860,9692.814
# 1483218862,9693.086
# 1483218864,9692.910
# 1483218866,9692.782
# 1483218868,9692.726
# 1483218870,9692.786
# 1483218872,9692.878
# 1483218874,9692.877
# 1483218876,9692.590
# 1483218878,9692.750
# 1483218880,9692.378
# 1483218882,9692.163
# 1483218884,9692.148
# 1483218886,9692.400
# 1483218888,9692.424
# 1483218890,9692.380
# 1483218892,9692.688
# 1483218894,9692.209
# 1483218896,9691.965
# 1483218898,9691.995
# 1483218900,9692.088
# 1483218902,9692.024
# 1483218904,9691.896
# 1483218906,9691.980
# 1483218908,9692.136
# 1483218910,9692.048
# 1483218912,9692.496
# 1483218914,9692.205
# 1483218916,9691.709
# 1483218918,9691.791
# 1483218920,9692.188
# 1483218922,9692.627
# 1483218924,9692.744
# 1483218926,9692.282
# 1483218928,9692.400
# 1483218930,9692.214
# 1483218932,9692.193
# 1483218934,9691.962
# 1483218936,9692.118
# 1483218938,9691.884
# 1483218940,9691.567
# 1483218942,9691.247
# 1483218944,9690.702
# 1483218946,9690.268
# 1483218948,9690.446
# 1483218950,9690.482
# 1483218952,9690.359
# 1483218954,9690.234
# 1483218956,9690.195
# 1483218958,9690.118
# 1483218960,9690.117
# 1483218962,9690.154
# 1483218964,9690.237
# 1483218966,9690.494
# 1483218968,9690.414
# 1483218970,9690.175
# 1483218972,9690.260
# 1483218974,9690.099
# 1483218976,9689.712
# 1483218978,9689.261
# 1483218980,9689.095
# 1483218982,9689.055
# 1483218984,9689.339
# 1483218986,9689.436
# 1483218988,9689.874
# 1483218990,9689.729
# 1483218992,9689.933
# 1483218994,9689.928
# 1483218996,9689.960
# 1483218998,9689.930
# 1483219000,9690.112
# 1483219002,9689.971
# 1483219004,9689.585
# 1483219006,9689.621
# 1483219008,9689.818
# 1483219010,9690.183
# 1483219012,9689.746
# 1483219014,9689.915
# 1483219016,9689.762
# 1483219018,9689.568
# 1483219020,9689.172
# 1483219022,9688.837
# 1483219024,9688.893
# 1483219026,9688.937
# 1483219028,9688.749
# 1483219030,9688.610
# 1483219032,9688.518
# 1483219034,9688.551
# 1483219036,9688.512
# 1483219038,9688.445
# 1483219040,9688.598
# 1483219042,9688.025
# 1483219044,9688.203
# 1483219046,9688.208
# 1483219048,9687.948
# 1483219050,9687.797
# 1483219052,9687.921
# 1483219054,9687.982
# 1483219056,9687.840